name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install Poetry
        run: |
          pipx install poetry==1.8.*
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
          
      - name: Cache virtual environment
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-ansi
          # Ruff & mypy が dev-dependencies に無い場合は↓
          # poetry add --group dev ruff mypy pytest-asyncio --exact

      - name: Ruff lint
        run: poetry run ruff check .

      - name: mypy strict
        run: poetry run mypy .

      - name: Pytest
        run: poetry run pytest -q

      - name: Mark job success
        if: success()
        run: echo "CI passed successfully!"
